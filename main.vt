fn add(u32)(a: u32, b: u32): u32 {
    return a + b;
}

struct Point {
    x: f64,
    // comment
y: f64,
}

fn dist(p1: Point, p2: Point): f64 {
    /*let dx = p1.x - p2.x;
let dy = p1.y - p2.y; */
    return (dx * dx + dy * dy) ** 0.5;
}

const SIZE = 10;

fn fill(arr: [u8; SIZE], val: u8): None {
    let i = 0;
    loop {
        if i >= SIZE {
            break;
        }
        arr[i] = val;
        i = i + 1;
    }
    None
}

fn fact(n: u64): u64 {
    if n <= 1 {
        return 1;
    }
    return n * fact(n - 1);
}

pub fn max(a: i32, b: i32): i32 {
    if a > b {
        return a;
    }
    return b;
}